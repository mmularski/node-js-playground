service: app-cognito

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: ${self:custom.deployment.myRegion.${self:custom.deployment.myStage}}
  profile: ${self:custom.deployment.myProfile.${self:custom.deployment.myStage}}
  
custom:
  deployment: ${file(config/deployment.yml):deployment}

resources:
  Resources:
    # TODO LEKCJA 09-04. Backend: Zarządzanie użytkownikami (Cognito)
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${self:custom.deployment.myStage}-user-pool
        AutoVerifiedAttributes: 
          - email
        # AliasAttributes:
          # Attributes supported as an alias for this user pool. Possible values: 
          # phone_number, email, or preferred_username.
          # - email
        UsernameAttributes: 
          # Determines whether email addresses or phone numbers can be specified as user names 
          # when a user signs up. Possible values: phone_number or email.
          - email
        VerificationMessageTemplate:
          DefaultEmailOption: 'CONFIRM_WITH_LINK'
        MfaConfiguration: 'OFF'
        Policies:
          PasswordPolicy:
            MinimumLength: 6
            RequireLowercase: false
            RequireNumbers: false
            RequireSymbols: false
            RequireUppercase: false
            TemporaryPasswordValidityDays: 7
    
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-${self:custom.deployment.myStage}-frontend-client
        GenerateSecret: false
        UserPoolId:
          Ref: CognitoUserPool

    CognitoIdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName: ${self:service}-${self:custom.deployment.myStage}-identity-pool
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders:
          - ClientId:
              Ref: CognitoUserPoolClient
            ProviderName:
              Fn::GetAtt: [CognitoUserPool, ProviderName]

    CognitoIdentityPoolRoles:
      Type: AWS::Cognito::IdentityPoolRoleAttachment
      Properties:
        IdentityPoolId:
          Ref: CognitoIdentityPool
        Roles:
          authenticated:
            Fn::GetAtt: [CognitoAuthRole, Arn]
          unauthenticated:
            Fn::GetAtt: [CognitoUnauthRole, Arn]

    CognitoAuthRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${self:custom.deployment.myStage}-auth-role
        Path: /
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Federated: "cognito-identity.amazonaws.com"
              Action:
                - "sts:AssumeRoleWithWebIdentity"
              Condition:
                StringEquals:
                  "cognito-identity.amazonaws.com:aud":
                    Ref: CognitoIdentityPool
                "ForAnyValue:StringLike":
                  "cognito-identity.amazonaws.com:amr": authenticated
        Policies:
          - PolicyName: "CognitoAuthorizedPolicy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "mobileanalytics:PutEvents"
                    - "cognito-sync:*"
                    - "cognito-identity:*"
                  Resource: "*"
                - Effect: "Allow"
                  Action:
                    - "execute-api:Invoke"
                  Resource: "*"

    CognitoUnauthRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${self:custom.deployment.myStage}-unauth-role
        Path: /
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Federated: "cognito-identity.amazonaws.com"
              Action:
                - "sts:AssumeRoleWithWebIdentity"
              Condition:
                StringEquals:
                  "cognito-identity.amazonaws.com:aud":
                    Ref: CognitoIdentityPool
                "ForAnyValue:StringLike":
                  "cognito-identity.amazonaws.com:amr": unauthenticated
        Policies:
          - PolicyName: "CognitoUnauthorizedPolicy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "mobileanalytics:PutEvents"
                    - "cognito-sync:*"
                    - "cognito-identity:*"
                  Resource: "*"
  Outputs:
    Region:
      Value: ${self:provider.region}
    UserPoolId:
      Value: !Ref CognitoUserPool
    AppClientId:
      Value: !Ref CognitoUserPoolClient